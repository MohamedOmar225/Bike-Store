// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bike_store_2.Data;

#nullable disable

namespace bikestore2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250321120706_product")]
    partial class Product
    {
        /// <inheritdoc />
        protected void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("bike_store_2.Entities.Brand", b =>
                {
                    b.Property<int>("brand_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("brand_id"));

                    b.Property<string>("brand_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("brand_id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("bike_store_2.Entities.Category", b =>
                {
                    b.Property<int>("cate_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cate_id"));

                    b.Property<string>("cate_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cate_id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("bike_store_2.Entities.Employee", b =>
                {
                    b.Property<int>("Emp_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Emp_id"));

                    b.Property<string>("Emp_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Emp_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Emp_phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Emp_salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Store_id")
                        .HasColumnType("int");

                    b.HasKey("Emp_id");

                    b.HasIndex("Store_id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("bike_store_2.Entities.Product", b =>
                {
                    b.Property<int>("product_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("product_id"));

                    b.Property<int>("brand_id")
                        .HasColumnType("int");

                    b.Property<int>("cate_id")
                        .HasColumnType("int");

                    b.Property<decimal?>("list_price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("model_year")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("product_id");

                    b.HasIndex("brand_id");

                    b.HasIndex("cate_id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("bike_store_2.Entities.Store", b =>
                {
                    b.Property<int>("store_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("store_id"));

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("store_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("store_id");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("bike_store_2.Entities.Employee", b =>
                {
                    b.HasOne("bike_store_2.Entities.Store", "Store")
                        .WithMany("Employees")
                        .HasForeignKey("Store_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("bike_store_2.Entities.Product", b =>
                {
                    b.HasOne("bike_store_2.Entities.Brand", "Brands")
                        .WithMany("Products")
                        .HasForeignKey("brand_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bike_store_2.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("cate_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brands");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("bike_store_2.Entities.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("bike_store_2.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("bike_store_2.Entities.Store", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
